{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","index.js"],"names":["Navbar","total","className","href","Counter","handleIncrement","setState","value","props","counter","this","getBadgeClasses","formatCount","onClick","onIncrement","onDelete","id","classes","count","Component","Counters","onReset","counters","map","key","App","state","handleDelete","filter","i","handleReset","c","index","indexOf","Fragment","length","ReactDOM","render","document","getElementById"],"mappings":"4MAYeA,EAVA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACI,yBAAKC,UAAU,qCACX,uBAAGC,KAAK,IAAID,UAAU,gBAAtB,UACW,0BAAMA,UAAU,kCAAkCD,MCiD1DG,E,4MA5BXC,gBAAkB,WAEd,EAAKC,SAAS,CAAEC,MAAO,EAAKC,MAAMC,QAAQF,MAAQ,K,uDAzB5C,IAAD,OACL,OACI,yBAAKL,UAAU,OACX,0BAAMA,UAAWQ,KAAKC,mBACjBD,KAAKE,eAEV,4BACIC,QAAS,kBAAM,EAAKL,MAAMM,YAAY,EAAKN,MAAMC,UACjDP,UAAU,qBAFd,aAMA,4BACIW,QAAS,kBAAM,EAAKL,MAAMO,SAAS,EAAKP,MAAMC,QAAQO,KACtDd,UAAU,uBAFd,Y,wCA4BR,IAAIe,EAAU,mBAEd,OADAA,GAAwC,IAA7BP,KAAKF,MAAMC,QAAQF,MAAc,UAAY,Y,oCAI7C,IACIW,EAAUR,KAAKF,MAAMC,QAA5BF,MACR,OAAiB,IAAVW,EAAc,OAASA,M,GAjDhBC,aC2BPC,E,uKAxBD,IAAD,EACgDV,KAAKF,MAAlDa,EADH,EACGA,QAASC,EADZ,EACYA,SAAUP,EADtB,EACsBA,SAAUD,EADhC,EACgCA,YAErC,OACI,6BACI,4BACID,QAASQ,EACTnB,UAAU,4BAFd,SAMCoB,EAASC,KAAI,SAACd,GAAD,OACV,kBAAC,EAAD,CACIe,IAAKf,EAAQO,GACbD,SAAUA,EACVD,YAAaA,EACbL,QAASA,Y,GAlBVU,aCqDRM,E,4MAnDXC,MAAQ,CACJJ,SAAU,CACN,CAAEN,GAAI,EAAGT,MAAO,GAChB,CAAES,GAAI,EAAGT,MAAO,GAChB,CAAES,GAAI,EAAGT,MAAO,GAChB,CAAES,GAAI,EAAGT,MAAO,K,EAIxBoB,aAAe,SAACX,GACZ,IAAMM,EAAW,EAAKI,MAAMJ,SAASM,QAAO,SAACC,GAAD,OAAOA,EAAEb,KAAOA,KAC5D,EAAKV,SAAS,CAAEgB,c,EAGpBQ,YAAc,WACV,IAAMR,EAAW,EAAKI,MAAMJ,SAASC,KAAI,SAACQ,GAEtC,OADAA,EAAExB,MAAQ,EACHwB,KAEX,EAAKzB,SAAS,CAAEgB,c,EAGpBjB,gBAAkB,SAACI,GACf,IAAMa,EAAQ,YAAO,EAAKI,MAAMJ,UAC1BU,EAAQV,EAASW,QAAQxB,GAC/Ba,EAASU,GAAT,eAAuBvB,GACvBa,EAASU,GAAOzB,QAChB,EAAKD,SAAS,CAAEgB,c,uDAIhB,OACI,kBAAC,IAAMY,SAAP,KACI,kBAAC,EAAD,CACIjC,MACIS,KAAKgB,MAAMJ,SAASM,QAAO,SAACG,GAAD,OAAOA,EAAExB,MAAQ,KAAG4B,SAGvD,0BAAMjC,UAAU,aACZ,kBAAC,EAAD,CACIoB,SAAUZ,KAAKgB,MAAMJ,SACrBD,QAASX,KAAKoB,YACdf,SAAUL,KAAKiB,aACfb,YAAaJ,KAAKL,wB,GA5CxBc,aCClBiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.59f9bdec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst Navbar = ({ total }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light mb-4\">\r\n            <a href=\"#\" className=\"navbar-brand\">\r\n                Navbar <span className=\"badge badge-pill badge-primary\">{total}</span>\r\n            </a>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"m-2\">\r\n                <span className={this.getBadgeClasses()}>\r\n                    {this.formatCount()}\r\n                </span>\r\n                <button\r\n                    onClick={() => this.props.onIncrement(this.props.counter)}\r\n                    className=\"btn btn-secondary\"\r\n                >\r\n                    Increment\r\n                </button>\r\n                <button\r\n                    onClick={() => this.props.onDelete(this.props.counter.id)}\r\n                    className=\"btn btn-danger ml-2\"\r\n                >\r\n                    Hapus\r\n                </button>\r\n                {/* {this.renderTags()}   */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleIncrement = () => {\r\n        // console.log('increment clicked', this)\r\n        this.setState({ value: this.props.counter.value + 1 });\r\n    };\r\n\r\n    // renderTags() {\r\n    //     if (this.state.tags.length === 0) return <p>There are no tags.</p>;\r\n    //     return (\r\n    //         <ul>\r\n    //             {this.state.tags.map((tag) => (\r\n    //                 <li key={tag}>{tag}</li>\r\n    //             ))}\r\n    //         </ul>\r\n    //     );\r\n    // }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\"; \r\n        classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n        const { value: count } = this.props.counter;\r\n        return count === 0 ? \"Zero\" : count;\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n\r\n    render() {\r\n        const { onReset, counters, onDelete, onIncrement } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <button\r\n                    onClick={onReset}\r\n                    className=\"btn btn-sm btn-secondary\"\r\n                >\r\n                    Reset\r\n                </button>\r\n                {counters.map((counter) => (\r\n                    <Counter\r\n                        key={counter.id}\r\n                        onDelete={onDelete}\r\n                        onIncrement={onIncrement}\r\n                        counter={counter}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Counters from \"./components/counters\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        counters: [\r\n            { id: 1, value: 0 },\r\n            { id: 2, value: 0 },\r\n            { id: 3, value: 0 },\r\n            { id: 4, value: 0 },\r\n        ],\r\n    };\r\n\r\n    handleDelete = (id) => {\r\n        const counters = this.state.counters.filter((i) => i.id !== id);\r\n        this.setState({ counters });\r\n    };\r\n\r\n    handleReset = () => {\r\n        const counters = this.state.counters.map((c) => {\r\n            c.value = 0;\r\n            return c;\r\n        });\r\n        this.setState({ counters });\r\n    };\r\n\r\n    handleIncrement = (counter) => {\r\n        const counters = [...this.state.counters];\r\n        const index = counters.indexOf(counter);\r\n        counters[index] = { ...counter };\r\n        counters[index].value++;\r\n        this.setState({ counters });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar\r\n                    total={\r\n                        this.state.counters.filter((c) => c.value > 0).length\r\n                    }\r\n                />\r\n                <main className=\"container\">\r\n                    <Counters\r\n                        counters={this.state.counters}\r\n                        onReset={this.handleReset}\r\n                        onDelete={this.handleDelete}\r\n                        onIncrement={this.handleIncrement}\r\n                    />\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}